// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mapreducemaster.proto

#include "mapreducemaster.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mapreduce_master {
class JobStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobStatus> _instance;
} _JobStatus_default_instance_;
}  // namespace mapreduce_master
static void InitDefaultsscc_info_JobStatus_mapreducemaster_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce_master::_JobStatus_default_instance_;
    new (ptr) ::mapreduce_master::JobStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce_master::JobStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobStatus_mapreducemaster_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobStatus_mapreducemaster_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mapreducemaster_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mapreducemaster_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mapreducemaster_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mapreducemaster_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce_master::JobStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce_master::JobStatus, status_),
  PROTOBUF_FIELD_OFFSET(::mapreduce_master::JobStatus, id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mapreduce_master::JobStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce_master::_JobStatus_default_instance_),
};

const char descriptor_table_protodef_mapreducemaster_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025mapreducemaster.proto\022\020mapreduce_maste"
  "r\032\026mapreduce_common.proto\"\177\n\tJobStatus\0222"
  "\n\006status\030\001 \001(\0162\".mapreduce_master.JobSta"
  "tus.Status\022\n\n\002ID\030\002 \001(\005\"2\n\006Status\022\010\n\004IDLE"
  "\020\000\022\013\n\007WORKING\020\001\022\010\n\004DONE\020\002\022\007\n\003ERR\020\0042`\n\017Ma"
  "pReduceMaster\022M\n\014ReportStatus\022\033.mapreduc"
  "e_master.JobStatus\032\036.mapreduce_common.Em"
  "ptyMessage\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mapreducemaster_2eproto_deps[1] = {
  &::descriptor_table_mapreduce_5fcommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mapreducemaster_2eproto_sccs[1] = {
  &scc_info_JobStatus_mapreducemaster_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mapreducemaster_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mapreducemaster_2eproto = {
  false, false, descriptor_table_protodef_mapreducemaster_2eproto, "mapreducemaster.proto", 300,
  &descriptor_table_mapreducemaster_2eproto_once, descriptor_table_mapreducemaster_2eproto_sccs, descriptor_table_mapreducemaster_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_mapreducemaster_2eproto::offsets,
  file_level_metadata_mapreducemaster_2eproto, 1, file_level_enum_descriptors_mapreducemaster_2eproto, file_level_service_descriptors_mapreducemaster_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mapreducemaster_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mapreducemaster_2eproto)), true);
namespace mapreduce_master {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JobStatus_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mapreducemaster_2eproto);
  return file_level_enum_descriptors_mapreducemaster_2eproto[0];
}
bool JobStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr JobStatus_Status JobStatus::IDLE;
constexpr JobStatus_Status JobStatus::WORKING;
constexpr JobStatus_Status JobStatus::DONE;
constexpr JobStatus_Status JobStatus::ERR;
constexpr JobStatus_Status JobStatus::Status_MIN;
constexpr JobStatus_Status JobStatus::Status_MAX;
constexpr int JobStatus::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void JobStatus::InitAsDefaultInstance() {
}
class JobStatus::_Internal {
 public:
};

JobStatus::JobStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce_master.JobStatus)
}
JobStatus::JobStatus(const JobStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&status_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:mapreduce_master.JobStatus)
}

void JobStatus::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&status_)) + sizeof(id_));
}

JobStatus::~JobStatus() {
  // @@protoc_insertion_point(destructor:mapreduce_master.JobStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobStatus::ArenaDtor(void* object) {
  JobStatus* _this = reinterpret_cast< JobStatus* >(object);
  (void)_this;
}
void JobStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobStatus& JobStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobStatus_mapreducemaster_2eproto.base);
  return *internal_default_instance();
}


void JobStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce_master.JobStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&status_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mapreduce_master.JobStatus.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::mapreduce_master::JobStatus_Status>(val));
        } else goto handle_unusual;
        continue;
      // int32 ID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce_master.JobStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mapreduce_master.JobStatus.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // int32 ID = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce_master.JobStatus)
  return target;
}

size_t JobStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce_master.JobStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mapreduce_master.JobStatus.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // int32 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce_master.JobStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const JobStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce_master.JobStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce_master.JobStatus)
    MergeFrom(*source);
  }
}

void JobStatus::MergeFrom(const JobStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce_master.JobStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void JobStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce_master.JobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobStatus::CopyFrom(const JobStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce_master.JobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobStatus::IsInitialized() const {
  return true;
}

void JobStatus::InternalSwap(JobStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobStatus, id_)
      + sizeof(JobStatus::id_)
      - PROTOBUF_FIELD_OFFSET(JobStatus, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mapreduce_master
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mapreduce_master::JobStatus* Arena::CreateMaybeMessage< ::mapreduce_master::JobStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce_master::JobStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
