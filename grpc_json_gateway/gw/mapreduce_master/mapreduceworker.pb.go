// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.0
// source: mapreduceworker.proto

package mapreduce_master

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_mapreduceworker_proto protoreflect.FileDescriptor

var file_mapreduceworker_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x1a, 0x16, 0x6d, 0x61, 0x70, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x32, 0xa7, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x1c, 0x2e,
	0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x6d, 0x61,
	0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x70, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x70, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e,
	0x3b, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_mapreduceworker_proto_goTypes = []interface{}{
	(*JobMessage)(nil),   // 0: mapreduce_common.JobMessage
	(*EmptyMessage)(nil), // 1: mapreduce_common.EmptyMessage
}
var file_mapreduceworker_proto_depIdxs = []int32{
	0, // 0: mapreduce_worker.MapReduceWorker.Work:input_type -> mapreduce_common.JobMessage
	1, // 1: mapreduce_worker.MapReduceWorker.Shutdown:input_type -> mapreduce_common.EmptyMessage
	1, // 2: mapreduce_worker.MapReduceWorker.Work:output_type -> mapreduce_common.EmptyMessage
	1, // 3: mapreduce_worker.MapReduceWorker.Shutdown:output_type -> mapreduce_common.EmptyMessage
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mapreduceworker_proto_init() }
func file_mapreduceworker_proto_init() {
	if File_mapreduceworker_proto != nil {
		return
	}
	file_mapreduce_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mapreduceworker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mapreduceworker_proto_goTypes,
		DependencyIndexes: file_mapreduceworker_proto_depIdxs,
	}.Build()
	File_mapreduceworker_proto = out.File
	file_mapreduceworker_proto_rawDesc = nil
	file_mapreduceworker_proto_goTypes = nil
	file_mapreduceworker_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MapReduceWorkerClient is the client API for MapReduceWorker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MapReduceWorkerClient interface {
	Work(ctx context.Context, in *JobMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	Shutdown(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
}

type mapReduceWorkerClient struct {
	cc grpc.ClientConnInterface
}

func NewMapReduceWorkerClient(cc grpc.ClientConnInterface) MapReduceWorkerClient {
	return &mapReduceWorkerClient{cc}
}

func (c *mapReduceWorkerClient) Work(ctx context.Context, in *JobMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/mapreduce_worker.MapReduceWorker/Work", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapReduceWorkerClient) Shutdown(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/mapreduce_worker.MapReduceWorker/Shutdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MapReduceWorkerServer is the server API for MapReduceWorker service.
type MapReduceWorkerServer interface {
	Work(context.Context, *JobMessage) (*EmptyMessage, error)
	Shutdown(context.Context, *EmptyMessage) (*EmptyMessage, error)
}

// UnimplementedMapReduceWorkerServer can be embedded to have forward compatible implementations.
type UnimplementedMapReduceWorkerServer struct {
}

func (*UnimplementedMapReduceWorkerServer) Work(context.Context, *JobMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Work not implemented")
}
func (*UnimplementedMapReduceWorkerServer) Shutdown(context.Context, *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shutdown not implemented")
}

func RegisterMapReduceWorkerServer(s *grpc.Server, srv MapReduceWorkerServer) {
	s.RegisterService(&_MapReduceWorker_serviceDesc, srv)
}

func _MapReduceWorker_Work_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapReduceWorkerServer).Work(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapreduce_worker.MapReduceWorker/Work",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapReduceWorkerServer).Work(ctx, req.(*JobMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapReduceWorker_Shutdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapReduceWorkerServer).Shutdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapreduce_worker.MapReduceWorker/Shutdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapReduceWorkerServer).Shutdown(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MapReduceWorker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mapreduce_worker.MapReduceWorker",
	HandlerType: (*MapReduceWorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Work",
			Handler:    _MapReduceWorker_Work_Handler,
		},
		{
			MethodName: "Shutdown",
			Handler:    _MapReduceWorker_Shutdown_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mapreduceworker.proto",
}
